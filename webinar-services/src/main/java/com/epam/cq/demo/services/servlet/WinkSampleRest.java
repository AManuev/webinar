package com.epam.cq.demo.services.servlet;import javax.ws.rs.GET;import javax.ws.rs.Path;import javax.ws.rs.Produces;import javax.ws.rs.QueryParam;import javax.ws.rs.core.MediaType;import javax.ws.rs.core.Response;import org.apache.commons.lang.StringUtils;import org.apache.felix.scr.annotations.Component;import org.apache.felix.scr.annotations.Property;import org.apache.felix.scr.annotations.Reference;import org.apache.felix.scr.annotations.Service;import com.epam.cq.demo.services.GoodbyeWorldService;@Component(immediate = true)@Service(Object.class)@Property(name = "javax.ws.rs", boolValue = true)// Be careful, do not map Wink mapper to general path. In this case you hide all Sling servlet// mapped under this URL.// request -> Wink filters (return 404, if not exist in mapper) -> Sling filters -> response@Path("/services/webinar/sample")public class WinkSampleRest {    // No something special when use other service from Wink service    @Reference    private GoodbyeWorldService goodbyeWorldService;    @GET    @Produces(MediaType.TEXT_PLAIN)    public Response getParam(@QueryParam("param") final String param) {        if (StringUtils.isEmpty(param)) {            return Response.ok()                    .entity("Apache Wink REST service: " + goodbyeWorldService.getMessage("Other service call"))                    .build();        } else {            return Response.ok().entity("Apache Wink REST service: param" + param).build();        }    }}